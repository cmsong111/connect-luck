name: Build Multi-Platform Spring Boot Image

on:
  push:
    branches:
      - "master"

jobs:
  build-oci-image:
    name: Build OCI Image
    strategy:
      matrix:
        os: [ ubuntu-22.04, ubuntu-22.04-arm ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Permissions for Gradle wrapper
        run: chmod +x gradlew

      - name: Get the version
        run: echo "VERSION=$(./gradlew properties -q | grep '^version:' | awk '{print $2}')" >> $GITHUB_ENV

      - name: Set OCI Image Name
        run: echo "IMAGE_NAME=${{ vars.DOCKERHUB_USERNAME }}/connect-luck:${{ env.VERSION }}-${{ matrix.os }}" >> $GITHUB_ENV

      - name: Build Boot Image with Buildpacks
        run: |
          ./gradlew bootBuildImage --imageName ${{ env.IMAGE_NAME }} --warning-mode all

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Individual Images
        run: |
          docker push ${{ env.IMAGE_NAME }}

    outputs:
      version: ${{ env.VERSION }}

  create-integrated-tag:
    name: Create Integrated Tag
    needs: build-oci-image
    runs-on: ubuntu-latest

    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create Multi-Platform Image
        run: |
          docker manifest create ${{ vars.DOCKERHUB_USERNAME }}/connect-luck:${{ needs.build-oci-image.outputs.version }} \
            ${{ vars.DOCKERHUB_USERNAME }}/connect-luck:${{ needs.build-oci-image.outputs.version }}-ubuntu-22.04 \
            ${{ vars.DOCKERHUB_USERNAME }}/connect-luck:${{ needs.build-oci-image.outputs.version }}-ubuntu-22.04-arm

          docker manifest push ${{ vars.DOCKERHUB_USERNAME }}/connect-luck:${{ needs.build-oci-image.outputs.version }}
          
          docker manifest create ${{ vars.DOCKERHUB_USERNAME }}/connect-luck:latest \
            ${{ vars.DOCKERHUB_USERNAME }}/connect-luck:${{ needs.build-oci-image.outputs.version }}-ubuntu-22.04 \
            ${{ vars.DOCKERHUB_USERNAME }}/connect-luck:${{ needs.build-oci-image.outputs.version }}-ubuntu-22.04-arm
          
          docker manifest push ${{ vars.DOCKERHUB_USERNAME }}/connect-luck:latest

  remove-individual-tags:
    name: Remove Individual Tags
    needs:
      - build-oci-image
      - create-integrated-tag
    runs-on: ubuntu-latest

    steps:
      - name: Remove Individual Tags
        run: |
          curl -X DELETE \
            -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}" \
            https://hub.docker.com/v2/repositories/${{ vars.DOCKERHUB_USERNAME }}/connect-luck/tags/${{ needs.build-oci-image.outputs.version }}-ubuntu-22.04/
          
          curl -X DELETE \
            -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}" \
            https://hub.docker.com/v2/repositories/${{ vars.DOCKERHUB_USERNAME }}/connect-luck/tags/${{ needs.build-oci-image.outputs.version }}-ubuntu-22.04-arm/
